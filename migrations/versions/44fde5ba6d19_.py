"""empty message

Revision ID: 44fde5ba6d19
Revises: bacb51554c25
Create Date: 2020-05-21 17:31:12.901775

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '44fde5ba6d19'
down_revision = 'bacb51554c25'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('banned_details')
    op.drop_table('country')
    op.drop_table('books')
    op.drop_table('authors')

    op.create_table('countries',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('writer',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('dob', sa.Date(), nullable=True),
    sa.Column('about', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('book',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('title', sa.String(), nullable=True),
    sa.Column('synopsis', sa.String(), nullable=True),
    sa.Column('author_id', sa.Integer(), nullable=True),
    sa.Column('book_cover', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['author_id'], ['writer.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('banned_book',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('start_date', sa.Date(), nullable=True),
    sa.Column('end_date', sa.Date(), nullable=True),
    sa.Column('book_id', sa.Integer(), nullable=True),
    sa.Column('country_id', sa.Integer(), nullable=True),
    sa.Column('reason_given', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['book_id'], ['book.id'], ),
    sa.ForeignKeyConstraint(['country_id'], ['countries.id'], ),
    sa.PrimaryKeyConstraint('id')
    )

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('books',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('books_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('title', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('synopsis', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('author_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('book_cover', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['author_id'], ['authors.id'], name='books_author_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='books_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('authors',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('authors_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('dob', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('about', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='authors_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('country',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('country_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='country_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('banned_details',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('start_date', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('end_date', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('book_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('country_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('reason_given', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['book_id'], ['books.id'], name='banned_details_book_id_fkey'),
    sa.ForeignKeyConstraint(['country_id'], ['country.id'], name='banned_details_country_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='banned_details_pkey')
    )
    op.drop_table('banned_book')
    op.drop_table('book')
    op.drop_table('writer')
    op.drop_table('countries')
    # ### end Alembic commands ###
